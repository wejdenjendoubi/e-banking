{
  "version": 3,
  "sources": ["../../../../../../node_modules/@angular/common/fesm2022/xhr.mjs"],
  "sourcesContent": ["/**\r\n * @license Angular v20.1.6\r\n * (c) 2010-2025 Google LLC. https://angular.io/\r\n * License: MIT\r\n */\r\n\r\nfunction parseCookieValue(cookieStr, name) {\r\n    name = encodeURIComponent(name);\r\n    for (const cookie of cookieStr.split(';')) {\r\n        const eqIndex = cookie.indexOf('=');\r\n        const [cookieName, cookieValue] = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)];\r\n        if (cookieName.trim() === name) {\r\n            return decodeURIComponent(cookieValue);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * A wrapper around the `XMLHttpRequest` constructor.\r\n *\r\n * @publicApi\r\n */\r\nclass XhrFactory {\r\n}\r\n\r\nexport { XhrFactory, parseCookieValue };\r\n\r\n"],
  "mappings": ";AAMA,SAAS,iBAAiB,WAAW,MAAM;AACvC,SAAO,mBAAmB,IAAI;AAC9B,aAAW,UAAU,UAAU,MAAM,GAAG,GAAG;AACvC,UAAM,UAAU,OAAO,QAAQ,GAAG;AAClC,UAAM,CAAC,YAAY,WAAW,IAAI,WAAW,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,MAAM,GAAG,OAAO,GAAG,OAAO,MAAM,UAAU,CAAC,CAAC;AACrH,QAAI,WAAW,KAAK,MAAM,MAAM;AAC5B,aAAO,mBAAmB,WAAW;AAAA,IACzC;AAAA,EACJ;AACA,SAAO;AACX;AAOA,IAAM,aAAN,MAAiB;AACjB;",
  "names": []
}
